name: create-redocly

on:
  push:
    branches: # Set a branch name to trigger deployment
      - main  
    paths:  # only trigger off changes to these files
      - utm.yaml 
      - .github/workflows/process-openapi-checkin.yaml

jobs:

  # Check that the OpenAPI file is valid.
  validate_openapi:
    runs-on: ubuntu-latest
    name: Validate OpenAPI

    steps:
    - name: Checkout
      uses: actions/checkout@v2
        
    - name: Swagger Validator
      uses: mbowman100/swagger-validator-action@master
      with:
        files: utm.yaml
        
  # Create an issue if the OpenAPI is not valid
  create-issue-on-invaldity:
    runs-on: ubuntu-latest
    name: Create an Issue on Invalid API
    needs: validate_openapi
    if: failure()
    steps:
      - uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: OpenAPI Validation Error ${{ env.GITHUB_WORKFLOW }}
          filename: .github/openapi-issue-template.md

  # If the OpenAPI is valid, generate static HTML redoc
  generate_html:
    runs-on: ubuntu-latest
    name: Generate static HTML
    needs: validate_openapi
    steps:
      # Checkout the repo into the running Docker
      - name: Checkout
        uses: actions/checkout@v2

      # Generate the HTML using an Action from the Marketplace
      - name: redoc-cli
        uses: seeebiii/redoc-cli-github-action@v10
        with:
          args: 'bundle utm.yaml -o docs/utm.html'

      # Simple check that the file was generated
      - name: check result
        run: |
          ls -al
          test -f docs/utm.html || (echo "Missing utm.html from previous step." && exit 1)

      # Get the file into the right branch/location for serving via GH Pages
      # Again using an Action from Marketplace to accomplish
      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: docs
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

